<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Shop</title>
</head>
<body>
  <%- include("./basic/header.ejs")%>
  <section class="container">
    <h1 class="title mt-5 has-text-centered" id="indexTitle">現正熱賣中</h1>
    <div class="columns is-multiline" id="cards"> <!-- is-multiline 用來自動換行-->
    </div>
  </section>

  <script>
    let productList = [];
    // 初始化時將商品資料從資料庫取出，並將它儲存到 productList
    $(document).ready(
      function init() {
        axios.get('/api/products')
        .then((res) => {
          let html = "";
          if (res.status === 200) {
            productList = res.data.productList
            for (let i = 0; i < productList.length; i++) {
              html += (
                `<div class="column is-one-third">
                  <div class="card">
                      <div class="card-image">
                        <figure class="image is-4by3">
                          <img src=${productList[i].img} alt="Placeholder image">
                        </figure>
                      </div>

                      <div class="card-content">
                        <div class="media">
                          <div class="media-content has-text-centered">
                            <p class="title is-2">${productList[i].name}</p>
                            <p class="subtitle is-6 mt-3">${productList[i].description}</p>
                          </div>
                        </div>
                
                      <div class="content">
                        <p class="is-size-2 has-text-centered has-text-danger has-text-weight-bold">售價： ${productList[i].amount} 元</p>
                        ${productList[i].inventory > 0 ? 
                        `<button class="button is-link" id="buy-${productList[i].id}">立即搶購</button>` : 
                        `<button class="button has-background-light" title="Disabled button" disabled>補貨中</button>` 
                        }                  
                      </div>
                    </div>
                  </div>
                </div>
                `
              )
            }      
          } else {
            $('#indexTitle').html("商城維護中")
          }
          $('#cards').html(html)
          
          for (let i = 0; i < productList.length; i++) {
            $(`#buy-${productList[i].id}`).click((evt) => {
              evt.preventDefault();
              // console.log(JSON.parse(JSON.stringify(productList[i])))
              buyProduct(JSON.stringify(productList[i]))
            })
          }   
        })
        .catch((error) => {
          alert("系統發生錯誤，請洽管理員。");
          location.reload();
        })
      }
    )
    // 新增商品到購物車
    function buyProduct(product) {
      product = JSON.parse(product);
      // 查看 localStorage 內是否有購物車資料
      let shopcart = window.localStorage.getItem("shopcart") != undefined
      && window.localStorage.getItem("shopcart") != null
      && window.localStorage.getItem("shopcart").length > 1
      ? JSON.parse(window.localStorage.getItem("shopcart")) : [];

      // 建立購物車內的 id array 來檢查產品是否重複
      let idArr = [];
      for (let i in shopcart) {
        idArr.push(shopcart[i].id);
      }

      if (!idArr.includes(product.id)) {
        shopcart.push({id: product.id, name: product.name, price: product.amount, amount: 1});
      }
      // 將新增的商品放入 localStorage 中
      window.localStorage.setItem("shopcart", JSON.stringify(shopcart))
      // 顯示購買數量在購物車的 icon 上
      $("#shopcart").html(`<i class="fas fa-shopping-cart"></i>&nbsp;購物車(${shopcart.length})`);
      alert("商品已新增至購物車！")
    }
  </script>

</body>
</html>